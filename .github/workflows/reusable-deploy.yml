on:
  workflow_call:
    inputs:
      country:
        description: "Country"
        required: true
        type: string
      city:
        description: "City"
        required: true
        type: string

jobs:
  validate-geojson:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ inputs.country }}-${{ inputs.city }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Validate GeoJSON
        uses: GrantBirki/json-yaml-validate@v2
        with:
          use_gitignore: false
          ajv_strict_mode: false
          json_schema: ./.github/workflows/schemas/FeatureCollection.json
          files: |
            ./data/relations.geojson
            ./data/ways.geojson
  validate-metadata:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate "metadata.json"
        uses: GrantBirki/json-yaml-validate@v2
        with:
          use_gitignore: false
          ajv_strict_mode: false
          json_schema: ./.github/workflows/schemas/metadata.json
          files: ./data/metadata.json

  build:
    needs: [validate-geojson, validate-metadata]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/equalstreetnames
          persist-credentials: false
      - run: git submodule update --init website
      - run: git submodule update --init cities/${{ inputs.country }}/${{ inputs.city }}
      - run: npm install
        working-directory: website
      - run: npm run build:${{ inputs.country }}:${{ inputs.city }}
        working-directory: website
        env:
          MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
      - uses: actions/upload-pages-artifact@v3
        with:
          path: website/dist/${{ inputs.country }}/${{ inputs.city }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
